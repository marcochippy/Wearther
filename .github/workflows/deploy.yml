name: Deploy to Plesk

on:
  push:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
        working-directory: ./Frontend

      - name: Create frontend .env
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > ./Frontend/.env

      - name: Build application
        run: npm run build
        working-directory: ./Frontend

      - name: Deploy Frontend to Plesk
        uses: celleb/plesk-deployer@v1.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_FRONTEND_KEY }}
          ftp-username: ${{ vars.FTP_USERNAME_FRONTEND }}
          ftp-server: ${{ vars.FTP_SERVER }}
          files-to-copy: './Frontend/dist ./Frontend/package.json ./Frontend/package-lock.json'
          remote-dir: './app/httpdocs'
          node-version: 20
          package-manager: npm
          npm-install: false
          restart: false
          clean-remote-dir: true

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
        working-directory: ./Backend

      - name: Deploy backend .env
        run: |
          cat <<EOF > ./Backend/.env
          PORT=${{ secrets.PORT }}
          KEY_WEATHERBIT=${{ secrets.KEY_WEATHERBIT }}
          URL_WEATHERBIT=${{ secrets.URL_WEATHERBIT }}
          ZIP_WEATHERBIT=${{ secrets.ZIP_WEATHERBIT }}
          KEY_ACCUWEATHER=${{ secrets.KEY_ACCUWEATHER }}
          URL_ACCUWEATHER=${{ secrets.URL_ACCUWEATHER }}
          MONGO_URI=${{ secrets.MONGO_URI }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          SPA_ORIGIN=${{ secrets.SPA_ORIGIN }}
          NODE_ENV=production
          EOF

      - name: Build backend
        run: npm run serverbuild
        working-directory: ./Backend

      - name: Stop Node.js app on Plesk
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER_BACKEND }}@${{ vars.FTP_SERVER }} \
          "plesk nodejs --disable-app --path /var/www/vhosts/api.marcoczirpek.com/httpdocs"

      - name: Deploy Backend to Plesk
        uses: celleb/plesk-deployer@v1.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_BACKEND_KEY }}
          ftp-username: ${{ vars.FTP_USERNAME_BACKEND }}
          ftp-server: ${{ vars.FTP_SERVER }}
          files-to-copy: './Backend/dist ./Backend/package.json ./Backend/package-lock.json ./Backend/.env'
          remote-dir: './httpdocs'
          node-version: 20
          package-manager: npm
          npm-install: false
          restart: false
          clean-remote-dir: true

        - name: Start Node.js app
          run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER_BACKEND }}@${{ vars.FTP_SERVER }} \
            "plesk nodejs --enable-app --path /var/www/vhosts/api.marcoczirpek.com/httpdocs"